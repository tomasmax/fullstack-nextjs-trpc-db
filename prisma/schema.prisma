generator client {
  provider = "prisma-client-js"
  output   = "../../node_modules/.prisma/client"
}

// DATABASE TYPE: SQLite works well for development but has limitations for production:
// - Limited concurrent connections (one write at a time)
// - No built-in replication or clustering
// 
// For production consider:
// - PostgreSQL: Better concurrency, rich feature set, mature ecosystem
// - Simultaneous requests
// - Consider adding read replicas for scaling read operations / sharding
datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?

  posts Post[]
}

model Post {
  id        Int     @id @default(autoincrement())
  title     String
  content   String?
  published Boolean @default(false)

  author   User?     @relation(fields: [authorId], references: [id])
  authorId Int?
  comments Comment[]
}

model Comment {
  id      Int    @id @default(autoincrement())
  content String

  post   Post @relation(fields: [postId], references: [id])
  postId Int
}
